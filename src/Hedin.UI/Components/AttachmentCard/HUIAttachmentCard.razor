@namespace Hedin.UI

<div class="hui-attachment-card">
    <MudCard Outlined="true" Square="true" Class="rounded-0 card">
        <MudCardContent Class="pa-3">
            <span class="d-flex justify-space-between mb-3">
                <MudText Class="mud-text-secondary hui-text-s">Attached file</MudText>
                <span class="d-flex flex-gap-2">
                    @Buttons
                </span>
            </span>

            <div class="d-flex gap-3">
                @if (string.IsNullOrWhiteSpace(ImgSrc))
                {
                    <MudPaper Class="d-flex flex-column flex-grow-1 align-center justify-center file-paper" Outlined="true" @onclick="OnViewClick">
                        <MudIcon Icon="@Icons.Material.Outlined.InsertDriveFile"></MudIcon>
                        <MudText>Uploaded file</MudText>
                    </MudPaper>
                }
                else
                {
                    <MudImage Src="@ImgSrc" Class="flex-grow-1 align-center justify-center file-paper" ObjectFit="ObjectFit.Cover" Width="196" @onclick="OnViewClick">
                    </MudImage>
                }
                <div class="flex-grow-1 file-info">
                    <MudText Class="mud-text-secondary hui-text-s mb-2">File information</MudText>
                    @FileInformation
                </div>
            </div>
        </MudCardContent>
        <MudCardActions Class="card-actions">
            @if (OnViewClick.HasDelegate)
            {
                <HUIButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.RemoveRedEye" Class="mr-3" OnClick="OnViewClick">View content</HUIButton>
            }
            @if (OnRemoveClick.HasDelegate)
            {
                <HUIButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Delete" OnClick="OnRemoveClick">Remove</HUIButton>
            }
        </MudCardActions>
    </MudCard>
</div>

@code {

    /// <summary>
    /// Custom buttons to display in the attachment card header.
    /// Typically used for additional actions or controls.
    /// </summary>
    [Parameter] public RenderFragment? Buttons { get; set; }
    
    /// <summary>
    /// Custom content for displaying file information.
    /// Overrides the default file information display.
    /// </summary>
    [Parameter] public RenderFragment? FileInformation { get; set; }

    /// <summary>
    /// If this is set, then the image will be shown instead of the file icon.
    /// </summary>
    [Parameter] public string? ImgSrc { get; set; }

    /// <summary>
    /// Event callback when the view button is clicked.
    /// Typically used to open or preview the attached file.
    /// </summary>
    [Parameter] public EventCallback OnViewClick { get; set; }
    
    /// <summary>
    /// Event callback when the remove button is clicked.
    /// Typically used to delete or detach the file.
    /// </summary>
    [Parameter] public EventCallback OnRemoveClick { get; set; }
}